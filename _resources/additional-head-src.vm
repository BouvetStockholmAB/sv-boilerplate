
## NOTE:
##
## additional-head-elements.min.vm is minified on build.
## Changes in the minified file will be overwritten.
##
## Edit additional-head-elements.vm only, never additional-head-elements.min.vm
##

#set ($currentPage = $sitevisionUtils.getPortletContextUtil().getCurrentPage())
#set ($propertyUtil = $sitevisionUtils.getPropertyUtil())
#set ($session = $request.getSession())
#set ($devmode = $request.getParameter("devmode"))


## Check if URL parameter is set
#if ($devmode)
    #if ($devmode == "false")
        $session.setAttribute("useLocalAssets", "")
    #else
        $session.setAttribute("useLocalAssets", "local")
    #end
#end

## Check session attribute
#set ($useLocalAssets = ($session.getAttribute("useLocalAssets") == "local"))

#if ($useLocalAssets)
    
    ## Localhost assets
    #set ($assetCssMain = "http://localhost:8080/main.css")
    #set ($assetJsMain = "http://localhost:8080/main.js")

    <script> console.log('Using local assets'); </script>
    
#else
    
    #set ($assetCssMain = $propertyUtil.getNode($currentPage, 'assetCssMain'))
    #if ($assetCssMain)
        #set ($assetCssMain = $propertyUtil.getString($assetCssMain, 'URI'))
    #else
        #set ($assetCssMain = $propertyUtil.getString($currentPage, 'assetCssMain'))
    #end

    #set ($assetJsMain = $propertyUtil.getNode($currentPage, 'assetJsMain'))
    #if ($assetJsMain)
        #set ($assetJsMain = $propertyUtil.getString($assetJsMain, 'URI'))
    #else
        #set ($assetJsMain = $propertyUtil.getString($currentPage, 'assetJsMain'))
    #end

#end

## assetCssFonts is fetched with AJAX and must always be on same domain as site
#set ($assetCssFonts = $propertyUtil.getNode($currentPage, 'assetCssFonts'))
#if ($assetCssFonts)
    #set ($assetCssFonts = $propertyUtil.getString($assetCssFonts, 'URI'))
#else
    #set ($assetCssFonts = $propertyUtil.getString($currentPage, 'assetCssFonts'))
#end


<script>
    
    var _b = _b || {}, BV = BV || {}; _b.init = [];   
    document.documentElement.className += ' bv-js ';
    
</script>

<link rel="stylesheet" media="all" href="$!{assetCssMain}">

<script>

    ( function ( win, doc, jq, s, assetJsMain, assetCssFonts ) {

        'use strict';

        var fontCss;

        _b.load = {
            /**
             * Load JavaScript file async by adding script tag to DOM.
             * May be used for own scripts or external scripts.
             * (script) _b.load.js( 'some-js-file.js' ) (/script)
             * // => Loads and executes some-js-file.js
             */
            js: function ( src ) {
                var script = doc.createElement( s ),
                    beforeEl = doc.getElementsByTagName( s )[ 0 ];
                script.src = src;
                beforeEl.parentNode.insertBefore( script, beforeEl );
                return script;
            }
        };

        _b.appendStyle = function ( data ) {
            var style;
            style = doc.createElement( 'style' );
            style.setAttribute( 'type', 'text/css' );
            if ( style.styleSheet ) {
                style.styleSheet.cssText = data;
            } else {
                style.appendChild( doc.createTextNode( data ) );
            }
            doc.head.appendChild( style );
        };

        _b.localStorage = ( function () {

            var uid = new Date().toString(),
                result;

            try {
                win.localStorage.setItem( uid, uid );
                result = win.localStorage.getItem( uid ) === uid;
                win.localStorage.removeItem( uid );
                return result && win.localStorage;
            } catch ( exception ) {
            }

        }() );

        _b.sessionStorage = _b.localStorage ? win.sessionStorage : false;


        
        if ( assetCssFonts && _b.localStorage ) {
            
            fontCss = _b.localStorage.getItem( 'bvSiteFonts' );

            if ( fontCss ) {
                _b.appendStyle( fontCss );
            } else {
                jq( function () {

                    jq.ajax( {
                        url     : assetCssFonts,
                        success : function ( data ) {
                            _b.appendStyle( data );
                            _b.localStorage.setItem( 'bvSiteFonts', data );
                        },
                        dataType: 'text'
                    } );

                } );
            }

        }

        if ( assetJsMain ) {

            _b.load.js( assetJsMain );

        }


    }( window, document, jQuery, 'script', '$!{assetJsMain}', '$!{assetCssFonts}' ) );

</script>
